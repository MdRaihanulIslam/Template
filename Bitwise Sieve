ll prime[N];
int setBit(int n,int position)
{
    n = n|(1<<position);
    return n;
}
bool checkBit(int n,int position)
{
    return n&(1<<position);
}
void primeGenarator(ll n)
{
    ll x = sqrt(n);
    prime[0] = setBit(prime[0],0);
    prime[0] = setBit(prime[0],1);
    for(int i=4;i<=n;i+=2)
        prime[i/32] = setBit(prime[i/32],i%32);
    for(int i=3;i<=x;i+=2)
    {
        if(!checkBit(prime[i/32],i%32))
        {
            for(int j=i+i;j<=n;j+=i)
                prime[j/32] = setBit(prime[j/32],j%32);
        }
    }
    ll m = 1e6;
    for(int i=2;i<=m;i++)
    {
        if(!checkBit(prime[i/32],i%32))
            cout<<i<<" ";
    }
    cout<<endl;
    return;
}
