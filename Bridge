vi adj[N];
vector<pair<int,int>>bridges;
bool vis[N];
int low[N],depth[N];
int cnt = 0;
void Tarjan(int node,int par,int d)
{
    vis[node] = 1;
    low[node] = depth[node] = d;
    for(auto child:adj[node])
    {
        if(child==par)
            continue;
        if(!vis[child])
        {
            Tarjan(child,node,d+1);
            if(low[child]>depth[node])
            {
                cnt++;
                if(child>node)
                bridges.pb({node,child});
                else bridges.pb({child,node});
            }
            low[node] = min(low[node],low[child]);
        }
        else
        {
            if(depth[child]<depth[node])
                low[node] = min(low[node],depth[child]);
        }
    }
}

